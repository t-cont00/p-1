#!/bin/bash

API_URL="https://server.server.abc.com/rest/api/1.0/projects/FFF/repos"
AUTH_TOKEN="HSJSHSHSH"
LIMIT=700  # Adjust as needed
START=0
REPOS_FILE="repositories.txt"
APPS_FILE="appd.txt"
MATCHED_FILE="matched_results.txt"

# Ensure previous matched results are cleared
> "$MATCHED_FILE"

echo "Fetching all repositories..."

# Fetch all repositories and store them in a file
while true; do
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" -H "Content-Type: application/json" "$API_URL?limit=$LIMIT&start=$START")

    # Extract repository names using jq and save to file
    echo "$response" | jq -r '.values[].name' >> "$REPOS_FILE"

    # Check if it's the last page
    is_last_page=$(echo "$response" | jq -r '.isLastPage')
    if [ "$is_last_page" == "true" ]; then
        break
    fi

    # Get next start index
    START=$(echo "$response" | jq -r '.nextPageStart')
done

echo "Total repositories fetched: $(wc -l < "$REPOS_FILE")"

# Check if appd.txt exists
if [ ! -f "$APPS_FILE" ]; then
    echo "appd.txt file not found!"
    exit 1
fi

# Store app-IDs in an associative array
declare -A APP_IDS
while IFS= read -r line; do
    APP_IDS["$line"]=1
done < "$APPS_FILE"

# Function to search in a single repository
search_repo() {
    local repo="$1"
    echo "Processing repository: $repo"

    BASE_PATH="https://server.server.abc.com/rest/api/1.0/projects/$repo/browse/k8s/envs/pr"

    # Fetch regions (usc1/use5)
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" "$BASE_PATH")
    regions=$(echo "$response" | jq -r '.values[].name' | grep -E "usc1|use5" || true)

    for region in $regions; do
        REGION_PATH="$BASE_PATH/$region"
        echo "  Checking region: $region in $repo"

        # Fetch directories under the region
        response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" "$REGION_PATH")
        app_folders=$(echo "$response" | jq -r '.values[].name')

        for folder in $app_folders; do
            if [[ ${APP_IDS["$folder"]} ]]; then
                echo "$folder -> $repo" >> "$MATCHED_FILE"
            fi
        done
    done
}

export -f search_repo  # Export function for parallel execution

# Run searches in parallel for all repositories
cat "$REPOS_FILE" | xargs -P 10 -I {} bash -c 'search_repo "{}"'

echo "Mapping complete. Check matched_results.txt for output."
