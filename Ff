#!/bin/bash

API_URL="https://server.server.abc.com/rest/api/1.0/projects"
AUTH_TOKEN="HSJSHSHSH"

# Define the pattern to search inside YAML files
PATTERN="nodeaffinity:.*RequiredDuringSchedule"

# Function to search for YAML files and check content
function search_yaml_files {
    local project_name="$1"
    local base_path="browse"

    echo "üîç Scanning project: $project_name"

    # Recursively list all directories under browse
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" "$API_URL/$project_name/$base_path")

    if [[ "$response" == *"errors"* ]]; then
        echo "‚ö†Ô∏è  No browse directory found in $project_name"
        return
    fi

    # Extract all subdirectories & files
    items=($(echo "$response" | grep -o '"name":"[^"]*' | sed -E 's/"name":"([^"]+)"/\1/'))

    for item in "${items[@]}"; do
        full_path="$base_path/$item"

        # Fetch subdirectories and files
        sub_response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" "$API_URL/$project_name/$full_path")
        sub_items=($(echo "$sub_response" | grep -o '"name":"[^"]*' | sed -E 's/"name":"([^"]+)"/\1/'))

        for sub_item in "${sub_items[@]}"; do
            sub_item_path="$full_path/$sub_item"

            # If it's a YAML file, scan for the pattern
            if [[ "$sub_item" == *.yaml || "$sub_item" == *.yml ]]; then
                file_content=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" "$API_URL/$project_name/$sub_item_path")

                if [[ "$file_content" =~ $PATTERN ]]; then
                    echo "‚úÖ Match found in: $project_name/$sub_item_path"
                fi
            fi
        done
    done
}

# Process each project from projects.txt
while IFS= read -r project; do
    search_yaml_files "$project"
done < projects.txt

echo "‚úÖ Scan completed!"
