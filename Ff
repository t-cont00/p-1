check_yaml_content() {
    local project_name="$1"
    local file_path="$2"
    local file_url="$API_URL/$project_name/browse/$file_path"

    # Fetch file content
    file_content=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
        -H "Content-Type: application/json" "$file_url")

    # Check if file contains 'statefulset'
    if [[ "$file_content" != *"statefulset"* ]]; then
        return
    fi

    # Determine the expected AGENT_NAME pattern and required pairs based on file path
    if [[ "$file_path" == *"use5"* ]]; then
        expected_agent_prefix="PRUGE5"
        required_pairs_one=(
            "name: AGENT_NAME" "value: PRUGE5*"
            "name: API_SERVER" "value: uc4webprodny.chicago.cme.com"
            "name: API_CLIENT" "value: 185"
            "name: UC4_ENV" "value: NY"
            "name: APPSERVER1" "value: ucprap0001j.chicago.cme.com"
            "name: AGENT_PORT" "value: 2307"
        )
        required_pairs_two=(
            "name: AGENT_NAME" "value: PRUGE5*"
            "name: API_SERVER" "value: uc4dr.chicago.cme.com"
            "name: API_CLIENT" "value: 100"
            "name: UC4_ENV" "value: DR"
            "name: APPSERVER1" "value: ucdrap0001j.chicago.cme.com"
            "name: APPSERVER2" "value: ucdrap0002j.chicago.cme.com"
            "name: APPSERVER3" "value: ucdrap0003j.chicago.cme.com"
            "name: AGENT_PORT" "value: 2305"
        )
    elif [[ "$file_path" == *"usc1"* ]]; then
        expected_agent_prefix="PRUGC1"
        required_pairs_one=(
            "name: AGENT_NAME" "value: PRUGC1*"
            "name: API_SERVER" "value: uc4webprodny.chicago.cme.com"
            "name: API_CLIENT" "value: 185"
            "name: UC4_ENV" "value: NY"
            "name: APPSERVER1" "value: ucprap0001j.chicago.cme.com"
            "name: AGENT_PORT" "value: 2307"
        )
        required_pairs_two=(
            "name: AGENT_NAME" "value: PRUGC1*"
            "name: API_SERVER" "value: uc4dr.chicago.cme.com"
            "name: API_CLIENT" "value: 100"
            "name: UC4_ENV" "value: DR"
            "name: APPSERVER1" "value: ucdrap0001j.chicago.cme.com"
            "name: APPSERVER2" "value: ucdrap0002j.chicago.cme.com"
            "name: APPSERVER3" "value: ucdrap0003j.chicago.cme.com"
            "name: AGENT_PORT" "value: 2305"
        )
    else
        echo "❌ File path does not match expected environments (use5 or usc1)"
        return
    fi

    # Function to check if all pairs exist
    check_pair_set() {
        local -n pairs=$1
        for ((i=0; i<${#pairs[@]}; i+=2)); do
            local key="${pairs[i]}"
            local value="${pairs[i+1]}"
            if ! grep -qE "$key\s*:\s*$value" <<< "$file_content"; then
                return 1  # Missing pair found
            fi
        done
        return 0  # All pairs exist
    }

    # Validate required pairs
    if check_pair_set required_pairs_one || check_pair_set required_pairs_two; then
        echo "✔ Required pairs are present in $file_path"
    else
        echo "❌ Required pairs are missing in $file_path"
    fi

    # Extract AGENT_NAME value
    agent_name=$(echo "$file_content" | grep -A1 'name: AGENT_NAME' | grep 'value:' | awk -F 'value: ' '{print $2}' | tr -d '"')

    # Validate AGENT_NAME prefix
    if [[ "$agent_name" == "$expected_agent_prefix"* ]]; then
        echo "✔ AGENT_NAME ($agent_name) is present correctly in $file_path"
    else
        echo "❌ AGENT_NAME ($agent_name) is incorrect in $file_path"
    fi
}
